@model ProductWithCategoryVM
@{
    ViewData["Title"] = "Products";
}
<div class="row">
    <div class="col-lg-3">
        <div class="my-2">
            <form method="get" id="searchForm">
                <input type="text" name="searchTerm" value="@Model.searchTerm" />
                <input type="submit" value="Search" />
            </form>
        </div>
        <ul class="list-group list-unstyled">
            <li class="list-group-item"><a class="list-group-item @(Model.CategoryID==null?"active":"")" href="/">All Products</a></li>
            @foreach (var cat in Model.Categories)
            {
                <li>
                    <a class="list-group-item @(Model.CategoryID==cat.ID?"active":"")"
                       href="@Url.Action("index","products",new {id=cat.ID, searchTerm=Model.searchTerm,sortBy=Model.SortBy})">@cat.Name</a>
                </li>
            }
        </ul>
        <ul class="list-group list-unstyled my-3">
            <li class="list-group-item"><a class="list-group-item" href="/products">Default</a></li>
            <li class="list-group-item"><a class="list-group-item" href="@Url.Action("Index","products",new {sortBy=Convert.ToInt32(ProductFilter.PriceLowToHigh) })">Price High to Low</a></li>
            <li class="list-group-item"><a class="list-group-item" href="@Url.Action("Index","products",new {sortBy=Convert.ToInt32(ProductFilter.PriceHighToLow) })">Price Low to High</a></li>
            <li class="list-group-item"><a class="list-group-item" href="@Url.Action("Index","products",new {sortBy=Convert.ToInt32(ProductFilter.Latest) })">Latest</a></li>
        </ul>
    </div>
    <div class="col-lg-9">
        @if (Model.Products.Count > 0)
        {
            <div class="row">
                @foreach (var item in Model.Products)
                {
                    <div class="card col-lg-4">
                        <img class="card-img-top" src="~/images/@item.PictureUrl" alt="Card image cap">
                        <div class="card-body">
                            <h5 class="card-title">@item.Name - @item.Price Azn</h5>
                            <p class="card-text">@item.Description.</p>
                            <a href="#" class="btn btn-primary">Go somewhere</a>
                        </div>
                    </div>
                }
            </div>


            if (Model.Pager != null && Model.Pager.TotalPages > 1)
            {
                <div class="product-list-pagination">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="pageination">
                                <nav>
                                    <ul class="pagination justify-content-center">
                                        @if (Model.Pager.CurrentPage == 1)
                                        {
                                            <li class="page-item disabled">
                                                <a class="page-link disabled" href="#">
                                                    <i class="fas fa-angle-double-left"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action("index", "products", new { pageNo = Model.Pager.CurrentPage - 1, recordSize = Model.PageSize })">
                                                    <i class="fas fa-angle-double-left"></i>
                                                </a>
                                            </li>
                                        }

                                        @for (int ownpage = Model.Pager.StartPage; ownpage < Model.Pager.EndPage + 1; ownpage++)
                                        {
                                            var active = ownpage == Model.Pager.CurrentPage ? "active" : string.Empty;

                                            <li class="page-item @active">
                                                <a class="page-link" href="@Url.Action("Index","Products",new { searchTearm= Model.searchTerm, pageNo=ownpage , recordSize=Model.PageSize, sortBy= Model.SortBy })">
                                                    @ownpage
                                                </a>
                                            </li>
                                        }

                                        @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                                        {
                                            <li class="page-item disabled">
                                                <a class="page-link disabled">
                                                    <i class="fas fa-angle-double-right"></i>
                                                </a>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action("Index","Products",new { searchTerm = Model.searchTerm, pageNo = Model.Pager.CurrentPage + 1, recordSize = Model.PageSize, sortBy = Model.SortBy })">
                                                    <i class="fas fa-angle-double-right"></i>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <span class="alert alert-danger">Product not found! </span>
        }
    </div>
</div>


